name: Tests MacOSX

on:
  push:
  pull_request:
    
jobs:
  build_virus_macrophage:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run : brew install gcc@10

    - name: Build Virus Macrophage project
      run: |
        make virus-macrophage-sample
        make PHYSICELL_CPP=g++-10
        
    - name: Run Virus Macrophage cell lines project
      run: |
        ./virus-sample

  build_physimess:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run : brew install gcc@11

    - name: Build PhysiMeSS project
      run: |
        make physimess-sample
        make clean
        make PHYSICELL_CPP=g++-11
        
    - name: Run PhysiMeSS project
      run: |
        ./project
        ./project config/Fibre_Initialisation/mymodel_initialisation.xml
        ./project config/Cell_Fibre_Mechanics/mymodel_rotating.xml

  build_physiboss_cell_lines:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run : brew install gcc@11
      
    - name: Build PhysiBoSS cell lines project
      run: |
        make physiboss-cell-lines-sample
        make clean
        make PHYSICELL_CPP=g++-11
        
    - name: Run PhysiBoSS cell lines project
      run: |
        ./PhysiBoSS_Cell_Lines
  
  build_spheroid_TNF_model:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run : brew install gcc@11
      
    - name: Build PhysiBoSS TNF project
      run: |
        make physiboss-tnf-model
        make clean
        make PHYSICELL_CPP=g++-11
        
    - name: Run PhysiBoSS TNF project
      run: |
        ./spheroid_TNF_model

  build_physiboss_tutorial_macos:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run : brew install gcc@11
      
    - name: Build PhysiBoSS tutorial
      run: |
        make physiboss-tutorial
        make clean
        make PHYSICELL_CPP=g++-11 static
        cp project project_macos13

    - name: Run PhysiBoSS tutorial
      run: |
        ./project config/cell_cycle/PhysiCell_settings_cell_cycle_2D.xml
    
    - name: Caching produced project binary 
      uses: actions/cache@v3
      with:
        path: |
          /Users/runner/work/PhysiBoSSv2/PhysiBoSSv2/project_macos13
        key: ${{ runner.os }}-macos13-project-${{ github.run_id }}
    
    - name: Look at the generated binary
      run: |
        otool -L project
        lipo -archs project      
    
    - name: Save artifacts
      uses: actions/upload-artifact@v3
      with: 
        name: tutorial_binary_macosx_macos13
        path: project

  build_physiboss_tutorial_m1:
    runs-on: flyci-macos-large-latest-m1

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run : brew install gcc@11
      
    - name: Build PhysiBoSS tutorial
      run: |
        make physiboss-tutorial
        make PHYSICELL_CPP=g++-11 EXTRA_FLAGS=-Wl,-ld_classic static
        cp project project_macosm1

    - name: Run PhysiBoSS tutorial
      run: |
        ./project config/cell_cycle/PhysiCell_settings_cell_cycle_2D.xml
        
    - name: Caching produced project binary 
      uses: actions/cache@v3
      with:
        path: |
          /opt/actions-runner/_work/PhysiBoSSv2/PhysiBoSSv2/project_macosm1
        key: ${{ runner.os }}-macosm1-project-${{ github.run_id }}
     
    - name: Look at the generated binary
      run: |
        otool -L project
        lipo -archs project 
      
    - name: Save artifacts
      uses: actions/upload-artifact@v3
      with: 
        name: tutorial_binary_macos_m1
        path: project
        
  build_physiboss_tutorial_universal:
    runs-on: macos-latest
    needs: [build_physiboss_tutorial_m1, build_physiboss_tutorial_macos]

    steps:
    - uses: actions/checkout@v4

    - name: Caching produced project binary 
      uses: actions/cache@v3
      with:
        path: |
          /opt/actions-runner/_work/PhysiBoSSv2/PhysiBoSSv2/project_macosm1
        key: ${{ runner.os }}-macosm1-project-${{ github.run_id }}
    
    - name: Caching produced project binary 
      uses: actions/cache@v3
      with:
        path: |
          /Users/runner/work/PhysiBoSSv2/PhysiBoSSv2/project_macos13
        key: ${{ runner.os }}-macos13-project-${{ github.run_id }}
    
    - name: Creating universal binary
      run: | 
        lipo -create -output project_macos_universal project_macos13 project_macosm1

    - name: Checking universal binary
      run: |
        lipo -archs project_macos_universal
        otool -L project_macos_universal
        
    - name: Run PhysiBoSS tutorial
      run: |
        make physiboss-tutorial
        ./project_macos_universal config/cell_cycle/PhysiCell_settings_cell_cycle_2D.xml

    - name: Save artifacts
      uses: actions/upload-artifact@v3
      with: 
        name: tutorial_binary_macosx_universal
        path: project_macos_universal
        
        
  build_physiboss_cancer_invasion_macos:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run : brew install gcc@11
      
    - name: Build PhysiBoSS cancer invasion
      run: |
        make physiboss-tutorial-invasion
        make clean
        make PHYSICELL_CPP=g++-11 static
        cp invasion_model invasion_model_macos13

    - name: Caching produced project binary 
      uses: actions/cache@v3
      with:
        path: |
          /Users/runner/work/PhysiBoSSv2/PhysiBoSSv2/invasion_model_macos13
        key: ${{ runner.os }}-macos13-cancer_invasion-${{ github.run_id }}
    
    - name: Look at the generated binary
      run: |
        otool -L invasion_model
        lipo -archs invasion_model      
    
    - name: Save artifacts
      uses: actions/upload-artifact@v3
      with: 
        name: invasion_model_macosx_macos13
        path: invasion_model

  build_physiboss_cancer_invasion_m1:
    runs-on: flyci-macos-large-latest-m1

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run : brew install gcc@11
      
    - name: Build PhysiBoSS cancer invasion
      run: |
        make physiboss-tutorial-invasion
        make PHYSICELL_CPP=g++-11 EXTRA_FLAGS=-Wl,-ld_classic static
        cp invasion_model invasion_model_macosm1

    - name: Caching produced project binary 
      uses: actions/cache@v3
      with:
        path: |
          /opt/actions-runner/_work/PhysiBoSSv2/PhysiBoSSv2/invasion_model_macosm1
        key: ${{ runner.os }}-macosm1-cancer_invasion-${{ github.run_id }}
     
    - name: Look at the generated binary
      run: |
        otool -L invasion_model
        lipo -archs invasion_model 
      
    - name: Save artifacts
      uses: actions/upload-artifact@v3
      with: 
        name: invasion_model_binary_macos_m1
        path: invasion_model
        
  build_physiboss_cancer_invasion_universal:
    runs-on: macos-latest
    needs: [build_physiboss_tutorial_m1, build_physiboss_tutorial_macos]

    steps:
    - uses: actions/checkout@v4

    - name: Caching produced project binary 
      uses: actions/cache@v3
      with:
        path: |
          /opt/actions-runner/_work/PhysiBoSSv2/PhysiBoSSv2/invasion_model_macosm1
        key: ${{ runner.os }}-macosm1-cancer_invasion-${{ github.run_id }}
    
    - name: Caching produced project binary 
      uses: actions/cache@v3
      with:
        path: |
          /Users/runner/work/PhysiBoSSv2/PhysiBoSSv2/invasion_model_macos13
        key: ${{ runner.os }}-macos13-cancer_invasion-${{ github.run_id }}
    
    - name: Creating universal binary
      run: | 
        lipo -create -output invasion_model_macos_universal invasion_model_macos13 invasion_model_macosm1

    - name: Checking universal binary
      run: |
        lipo -archs invasion_model_macos_universal
        otool -L invasion_model_macos_universal
        
    - name: Save artifacts
      uses: actions/upload-artifact@v3
      with: 
        name: invasion_model_binary_macosx_universal
        path: invasion_model_macos_universal
        
    